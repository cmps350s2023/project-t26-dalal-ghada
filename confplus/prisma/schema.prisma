generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Date {
  id   Int    @id @default(autoincrement())
  name String
}

model Institution {
  id   Int    @id @default(autoincrement())
  name String
}

model Location {
  id   Int    @id @default(autoincrement())
  name String
}

model User {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  email      String @unique
  password   String
  role       String

  papers ReviewersOnPapers[]
}

model Paper {
  id                 Int    @id @default(autoincrement())
  paper_title        String
  abstract           String
  file               String
  overall_evaluation Int

  authors   Author[]
  reviewers ReviewersOnPapers[]
}

model ReviewersOnPapers {
  paper      Paper @relation(fields: [paperId], references: [id])
  paperId    Int
  reviewer   User  @relation(fields: [reviewerId], references: [id])
  reviewerId Int

  @@id([paperId, reviewerId])
}

model Author {
  id          Int 	  @id @default(autoincrement())
  first_name  String
  last_name   String
  email       String
  affiliation String
  presenter   Boolean @default(false)
  Paper       Paper   @relation(fields: [paperId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  paperId     Int
}

model Session {
  id       Int 	  @id @default(autoincrement())
  title    String
  location String
  date     String

  presentations	Presentation[]
}

model Presentation {
  id          	 Int 	 @id @default(autoincrement())
  paper_title    String
  presenter_name String
  from_time      String
  to_time        String
  Session      	 Session @relation(fields: [sessionId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sessionId    	 Int
}
