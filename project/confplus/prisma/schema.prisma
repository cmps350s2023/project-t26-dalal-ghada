generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Date {
  id   Int    @id @default(autoincrement())
  name String 
}

model Institution {
  id   Int    @id @default(autoincrement())
  name String 
}

model Location {
  id   Int    @id @default(autoincrement())
  name String 
}

model User {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String
  email      String @unique
  password   String
  role       String

  papers Reviewer[]
}

model Paper {
  id          Int    @id @default(autoincrement())
  paper_title String
  abstract    String
  paperURL    String

  isPresented Boolean @default(false)

  paperId   Int        
  authors   Author[]
  reviewers Reviewer[]
}

model Review {
  id            Int    @id @default(autoincrement())
  userID        Int
  overallRating Int
  contribution  Int
  weakness      String
  strength      String
}

model Reviewer {
  paper      Paper @relation(fields: [paperId], references: [id])
  paperId    Int
  reviewer   User  @relation(fields: [reviewerId], references: [id])
  reviewerId Int

  @@id([paperId, reviewerId])
}

model Author {
  id          Int     @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   
  affiliation String
  isPresenter Boolean @default(false)
  Paper       Paper   @relation(fields: [paperId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  paperId     Int
}

model Schedule {
  id       Int    @id @default(autoincrement())
  title    String  @unique
  location String
  date     String

  presentations Presentation[]
}

model Presentation {
  id        Int      @id @default(autoincrement())
  paperId  Int        @unique
  startTime String
  endTime   String
  schedule  Schedule @relation(fields: [Schedule], references: [id], onUpdate: Cascade, onDelete: Cascade)
  Schedule  Int
}
